CISC 3300 S25 
Homework 5 
1. What is the DOM? What is meant by the DOM tree? 
* The DOM is an API (Application Programming Interference) that is a programming interface for web documents which represents them as nodes and objects so that programming languages can interact with the page and change it. The DOM Tree is the model that the browser creates when loading a webpage. It is stored in the browser's memory and consists of 4 main nodes: document, element, attribute, text.
2. What is an XSS attack? How do they work? How can you guard against them? 
* An XSS attack is a Cross-Site Scripting attack where an attacker can gain access to private information such as user accounts. (Need to be aware of this when adding HTML to a page using innerHTML or other jQuery methods). It happens when a user acts maliciously and adds code (which acts as malware) into the website code which can run when other users access it. You can guard against it by being careful with that content you treat as html, there shouldn't be an option to display input which came from a user (if there is an input displayed there has to be options to validate it and strip it of malicious content).
3. What is an event in JavaScript? What kind of events can you respond to with code? 
* Events are “things” which happen to HTML elements, interactions create events which trigger code that we can react to. The events that can be responded to are mouse and keyboard events, and form events and these include clicking, submitting and loading the page.
4. How does a DOM eventListener work? What are the parameters it is expecting?
* DOM eventListners are event handlers that can deal with more than one function one time. It sets up a function that is called whenever that specific event is delivered to the target. The addEventListener method takes the parameters of the event type which can be seen as “click” and a function to be used in that event.
5. What is jQuery? Why use it? How do we load jQuery onto a page? 
* Jquery is a lightweight javascript library which makes it much easier to use JavaScript on your website. It takes tasks that require a bunch of lines and wraps it in methods that you can call with a single line of code. It simplifies tasks such as HTML, DOM manipulation, event handling, CSS animations, and ajax. We can use it via a cdn, by using script tags to link the jQuery library.


6. What is AJAX? JSON? The HTTP method types and what they do? 
* AJAX (Asynchronous JavaScript and XML) lets web pages be updated asynchronously by exchanging data with a web server behind the scenes. This is efficient and convenient because you can update certain smaller parts of the web page without reloading the entire page. This asynchronous style of programming lets your code run in the background while not blocking the execution of other code. HTTP fetches resources and is the foundation of data exchange on the WEB (html documents & json data) and uses client-server protocol. Some HTTPS request methods are GET which only retrieves data, POST which submits something to the chosen resource which makes a new resource through a change, PUTreplaces all representation of the target resource with the request payload, PATCH partially modifies a resource, and DELETE deletes a resource. JSON (Java-Script object notation) is a text based data format that uses js object syntax and human reasonable text to store and transmit data objects (attribute-value pairs & arrays).
7. Write some data in the JSON format. You can use this site https://jsonformatter.org/ to check if it’s in the right format, making use of the “validate” button. 
8. Create a webpage that contains an unordered list element which contains several list item elements. If a list item is clicked, change the color of it. Each list item should have a different color. 
9. Create a webpage that contains a button. Write jQuery code so that when the button is clicked an HTTP GET request is sent to a PHP backend. From the PHP backend(reference the php-project code found here: 
https://github.com/cisc3300/SP25-lecture-code/tree/main/2-20-lecture) return a json encoded associative array of data pertaining to your fake business. Make sure that it has at least a name and a price. Use the response returned on the frontend to create a div element for each piece of data, show the name and price of each item and give the elements some style. 
10. Create a webpage that contains a form element with some input elements. Write jQuery code so that when the form is submitted an HTTP POST request is sent to a PHP backend. From the PHP backend(reference the php-project code found here: 
https://github.com/cisc3300/SP25-lecture-code/tree/main/2-20-lecture) return an associative array with data for a success message that is JSON encoded. Use the response to create an HTML element that contains the message data, give it some proper styling.